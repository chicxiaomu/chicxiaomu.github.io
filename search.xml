<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title></title>
      <url>%2F2017%2F03%2F21%2FJava%E6%9C%8D%E5%8A%A1%E7%AB%AF%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%2F</url>
      <content type="text"><![CDATA[title: Java服务端开发环境搭建0 JDK下载安装 进入源码存放目录（eg：cd /data/src） wget下载jdk，由于wget不支持重定向，所以需要添加header（eg:wget –no-cookie –header “Cookie: oraclelicense=accept-securebackup-cookie” jdk） mv 下载的jdk压缩包到 安装目录（eg：mv jdk.tar.gz /usr/local/java） 解压安装包(eg:tar zxvf jdk.tar.gz) 运行 java -version 验证是否安装成功 1 配置环境变量这里介绍两种常用的环境变量配置方法： 修改/etc/profile文件:如果你的计算机仅仅作为开发使用时推荐使用这种方法，因为所有用户的shell都有权使用这些环境变量，可能会给系统带来安全性问题。 打开环境变量配置文件（eg:vi /etc/profile） 在文件尾追加 JAVA_HOME=/usr/local/java/jdk1.8.0_121 CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar PATH=$JAVA_HOME/bin:$PATH export JAVA_HOME export CLASSPATH 使用source命令启用配置（eg:source /etc/profile） 修改.bashrc文件：这种方法更为安全，它可以把使用这些环境变量的权限控制到用户级别。 打开用户目录的.bashrc文件（eg:vi ~/.bashrc） 在文件尾追加 JAVA_HOME=/usr/local/java/jdk1.8.0_121 CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar PATH=$JAVA_HOME/bin:$PATH export JAVA_HOME export CLASSPATH 退出重新登录 2 环境测试 在任意目录，通常在/data/tmp目录新建一个java文件（eg:Demo.java） 编译代码，javac Demo.java 运行代码，java Demo 3 常见问题“Error: Could not find or load main class” 如果java代码里面没有设置package，则是环境变量配置有误； 如果java代码里面有设置package，则需要构建和包名一致的路径，eg:package com.cjh.demo,则需要构建com/cjh/demo目录，并把编译的class文件放到该目录，然后回到和com平级的目录里面运行]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[我和我的博客]]></title>
      <url>%2F2017%2F03%2F03%2F%E6%88%91%E5%92%8C%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%2F</url>
      <content type="text"><![CDATA[工作已经快两年了，写了很多代码，也看了很多博客，慢慢的也有了自己的感悟，所以就有了这个博客。 GitHub. 缘由我认为有两点 记录与升华。通过写博客，我们可以记录工作中的思考、生活中的点滴，技术成长的同时，也装点了我们的回忆。 分享与提升。通过写博客，促使我们去专研问题并与人分享，同时通过他人的交流反馈来改善自我、提升自我。 另一份简历。博客也是简历之一，通过博客，可以更好的向他人展示自我。这也是非常有趣的事O(∩_∩)O~~ 风格简单，直接，文艺]]></content>
    </entry>

    
  
  
</search>
